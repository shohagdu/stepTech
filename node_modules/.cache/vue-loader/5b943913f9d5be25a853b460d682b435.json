{"remainingRequest":"D:\\xampping\\htdocs\\stepTech\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\xampping\\htdocs\\stepTech\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"D:\\xampping\\htdocs\\stepTech\\src\\App.vue","mtime":1601872655826},{"path":"D:\\xampping\\htdocs\\stepTech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampping\\htdocs\\stepTech\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\xampping\\htdocs\\stepTech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xampping\\htdocs\\stepTech\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}